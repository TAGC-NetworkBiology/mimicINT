FROM ubuntu:18.04


# ===========================================
# INSTALL R
# ===========================================

## Declare environment variables
ARG BUILD_DATE
ENV BUILD_DATE ${BUILD_DATE:-}

# Locale (Prefered language and encoding for messages)
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

ENV DEBIAN_FRONTEND noninteractive

## Install dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        apt-utils \
        apt-transport-https \
        ca-certificates \
        ed \
        g++ \
        gfortran \
        gnupg2 \
        gsfonts \
        less \
        libcurl4-openssl-dev \
        libfontconfig1-dev \
        libudunits2-dev \
        librsvg2-dev \
        libssl-dev \
        libxml2-dev \
        locales \
        make \
        vim-tiny \
        wget \
        zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# libharfbuzz-dev libfribidi-dev (x11)

## Configure local environment
# Use UTF-8
RUN  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
  && locale-gen en_US.utf8 \
# Define language to english
  && /usr/sbin/update-locale LANG=en_US.UTF-8 \
  && /usr/sbin/update-locale LANGUAGE=en_US.UTF-8

# command from https://cran.r-project.org/
# update indices
RUN apt update -qq
# install two helper packages we need
RUN apt install -y --no-install-recommends software-properties-common dirmngr
# add the signing key (by Michael Rutter) for these repos
# To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
# Fingerprint: E298A3A825C0D65DFD57CBB651716619E084DAB9
RUN wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
# add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed
RUN add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

RUN apt install -y --no-install-recommends r-base


# ===========================================
# INSTALL PANDOC
# ===========================================

# Pandoc version
ARG PANDOC_VERSION
ENV PANDOC_VERSION ${PANDOC_VERSION:-2.9.2.1}

# Install dependencies
RUN apt-get update && apt-get install -y wget

# Install stack
RUN apt-get update && apt-get install -y git \
  && wget -qO- https://get.haskellstack.org/ | sh

# Install pandoc
RUN cd /tmp \
# Download pandoc
  && wget https://hackage.haskell.org/package/pandoc-${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}.tar.gz \
# Unpack source code
  && tar xvzf pandoc-${PANDOC_VERSION}.tar.gz \
  && cd pandoc-${PANDOC_VERSION} \
# Build and install from source code
  && stack setup \
  && stack install \
# Copy pandoc binaries in /usr/local/bin,
# so it could be used by non-root users
  && cp /root/.local/bin/pandoc /usr/local/bin/pandoc


# Clean pandoc install
RUN cd / \
  && rm -rf /tmp/*


# ===========================================
# INSTALL R PACKAGES
# ===========================================

# Install R packages
RUN R -e 'install.packages( "getopt", dependencies=TRUE )'
RUN R -e 'install.packages( "ggplot2", dependencies=TRUE )'
RUN R -e 'install.packages( "plotly", dependencies=TRUE )'
RUN R -e 'install.packages( "data.table", dependencies=TRUE )'
RUN R -e 'install.packages( "gprofiler2", dependencies=TRUE )'

# Install Bioconductor packages
RUN R -e 'install.packages("BiocManager")'


# ===========================================
# CLEAN INSTALL
# ===========================================

# Remove other dependencies
RUN apt-get clean \
  && apt-get remove -y --purge build-essential
